<!DOCTYPE html>
<html lang="he" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>פלטפורמת הזמנת דוגמאות</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            direction: rtl;
        }

        .header {
            background: linear-gradient(135deg, #2c7a7b 0%, #2d6748 100%);
            color: white;
            text-align: center;
            padding: 2rem;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        }

        .header h1 {
            font-size: 2.5rem;
            margin-bottom: 0.5rem;
            font-weight: 700;
        }

        .header p {
            font-size: 1.1rem;
            opacity: 0.9;
        }

        .container {
            max-width: 1200px;
            margin: 2rem auto;
            padding: 0 1rem;
        }

        .form-section {
            background: white;
            border-radius: 12px;
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: 0 8px 16px rgba(0,0,0,0.1);
        }

        .form-title {
            color: #2c7a7b;
            font-size: 1.8rem;
            margin-bottom: 1.5rem;
            text-align: center;
            font-weight: 600;
        }

        .form-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .form-group {
            display: flex;
            flex-direction: column;
        }

        .form-group label {
            font-weight: 600;
            margin-bottom: 0.5rem;
            color: #2d3748;
            font-size: 0.95rem;
        }

        .form-group input, .form-group select {
            padding: 0.75rem;
            border: 2px solid #e2e8f0;
            border-radius: 8px;
            font-size: 1rem;
            transition: all 0.3s ease;
            direction: rtl;
        }

        .form-group input:focus, .form-group select:focus {
            outline: none;
            border-color: #2c7a7b;
            box-shadow: 0 0 0 3px rgba(44, 122, 123, 0.1);
        }

        .required::after {
            content: " *";
            color: #e53e3e;
        }

        .products-section {
            background: white;
            border-radius: 12px;
            padding: 2rem;
            box-shadow: 0 8px 16px rgba(0,0,0,0.1);
        }

        .products-title {
            color: #2c7a7b;
            font-size: 1.8rem;
            margin-bottom: 1.5rem;
            text-align: center;
            font-weight: 600;
        }

        .products-table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 2rem;
            background: white;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        }

        .products-table th {
            background: #2c7a7b;
            color: white;
            padding: 1rem;
            text-align: center;
            font-weight: 600;
            font-size: 1rem;
        }

        .products-table td {
            padding: 0.75rem;
            border-bottom: 1px solid #e2e8f0;
            text-align: center;
            vertical-align: middle;
        }

        .products-table tr:hover {
            background-color: #f7fafc;
        }

        .products-table input, .products-table select {
            width: 100%;
            padding: 0.5rem;
            border: 1px solid #e2e8f0;
            border-radius: 4px;
            text-align: center;
            font-size: 0.9rem;
        }

        .products-table input:focus, .products-table select:focus {
            outline: none;
            border-color: #2c7a7b;
            box-shadow: 0 0 0 2px rgba(44, 122, 123, 0.1);
        }

        /* סטייל לשדה autocomplete */
        .autocomplete-container {
            position: relative;
            width: 100%;
        }

        .autocomplete-input {
            width: 100%;
            padding: 0.5rem;
            border: 1px solid #e2e8f0;
            border-radius: 4px;
            text-align: center;
            font-size: 0.9rem;
            background: white;
        }

        .autocomplete-input:focus {
            outline: none;
            border-color: #2c7a7b;
            box-shadow: 0 0 0 2px rgba(44, 122, 123, 0.1);
        }

        .autocomplete-suggestions {
            position: absolute;
            top: 100%;
            left: 0;
            right: 0;
            background: white;
            border: 1px solid #e2e8f0;
            border-top: none;
            border-radius: 0 0 4px 4px;
            max-height: 150px;
            overflow-y: auto;
            z-index: 1000;
            display: none;
        }

        .autocomplete-suggestion {
            padding: 0.5rem;
            cursor: pointer;
            text-align: center;
            border-bottom: 1px solid #f1f5f9;
        }

        .autocomplete-suggestion:hover,
        .autocomplete-suggestion.selected {
            background-color: #2c7a7b;
            color: white;
        }

        .autocomplete-suggestion:last-child {
            border-bottom: none;
        }

        .row-number {
            background-color: #f7fafc;
            font-weight: 600;
            color: #2d3748;
        }

        .col-number {
            width: 8%;
            text-align: center;
        }

        .col-product {
            width: 20%;
            text-align: center;
        }

        .col-code {
            width: 20%;
            text-align: center;
        }

        .col-status {
            width: 20%;
            text-align: center;
        }

        .col-quantity {
            width: 20%;
            text-align: center;
        }

        .col-notes {
            width: 12%;
            text-align: center;
        }

        .action-buttons {
            display: flex;
            flex-wrap: wrap;
            gap: 1rem;
            justify-content: center;
            margin-top: 2rem;
        }

        .btn {
            padding: 0.75rem 1.5rem;
            border: none;
            border-radius: 8px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
        }

        .btn-primary {
            background: #2c7a7b;
            color: white;
        }

        .btn-primary:hover {
            background: #2d6748;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(44, 122, 123, 0.3);
        }

        .btn-secondary {
            background: #4a5568;
            color: white;
        }

        .btn-secondary:hover {
            background: #2d3748;
            transform: translateY(-2px);
        }

        .btn-success {
            background: #38a169;
            color: white;
        }

        .btn-success:hover {
            background: #2f855a;
            transform: translateY(-2px);
        }

        .btn-info {
            background: #3182ce;
            color: white;
        }

        .btn-info:hover {
            background: #2c5282;
            transform: translateY(-2px);
        }

        .btn-warning {
            background: #d69e2e;
            color: white;
        }

        .btn-warning:hover {
            background: #b7791f;
            transform: translateY(-2px);
        }

        .output-section {
            background: #f7fafc;
            border: 2px dashed #2c7a7b;
            border-radius: 12px;
            padding: 2rem;
            margin-top: 2rem;
            display: none;
        }

        .output-section.show {
            display: block;
            animation: fadeInUp 0.6s ease-out;
        }

        .output-content {
            background: white;
            padding: 1.5rem;
            border-radius: 8px;
            font-family: 'Arial', sans-serif;
            direction: rtl;
            text-align: right;
            white-space: pre-line;
            font-size: 14px;
            line-height: 1.6;
        }

        .output-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 1rem;
            direction: rtl;
        }

        .output-table th,
        .output-table td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: center;
            vertical-align: middle;
        }

        .output-table th {
            background-color: #2c7a7b;
            color: white;
            font-weight: bold;
        }

        .output-table tbody tr:nth-child(even) {
            background-color: #f9f9f9;
        }

        .output-table .col-num {
            width: 10%;
        }

        .output-table .col-code {
            width: 25%;
        }

        .output-table .col-status {
            width: 20%;
        }

        .output-table .col-qty {
            width: 15%;
        }

        .output-table .col-notes {
            width: 30%;
        }

        /* סטייל לתפריט יצוא */
        .export-menu {
            background: white;
            border: 2px solid #2c7a7b;
            border-radius: 12px;
            padding: 1.5rem;
            margin-top: 1rem;
            box-shadow: 0 8px 16px rgba(0,0,0,0.1);
            display: none;
        }

        .export-menu.show {
            display: block;
            animation: fadeInUp 0.4s ease-out;
        }

        .export-menu h4 {
            color: #2c7a7b;
            text-align: center;
            margin-bottom: 1rem;
            font-size: 1.2rem;
        }

        .export-options {
            display: flex;
            flex-wrap: wrap;
            gap: 1rem;
            justify-content: center;
        }

        .export-options .btn {
            flex: 1;
            min-width: 150px;
            max-width: 200px;
        }

        .products-table tbody tr:nth-child(even) {
            background-color: #f8f9fa;
        }

        @media (max-width: 768px) {
            .header h1 {
                font-size: 2rem;
            }

            .header p {
                font-size: 1rem;
            }

            .form-grid {
                grid-template-columns: 1fr;
                gap: 1rem;
            }

            .products-table {
                font-size: 0.8rem;
            }

            .products-table th,
            .products-table td {
                padding: 0.5rem;
            }

            .action-buttons {
                flex-direction: column;
                align-items: stretch;
            }

            .btn {
                justify-content: center;
            }

            .col-number {
                width: 12%;
            }

            .col-product {
                width: 25%;
            }

            .col-code {
                width: 20%;
            }

            .col-status {
                width: 25%;
            }

            .col-notes {
                width: 18%;
            }
        }

        @media (max-width: 480px) {
            .container {
                padding: 0 0.5rem;
            }

            .form-section,
            .products-section {
                padding: 1rem;
            }

            .products-table {
                font-size: 0.7rem;
            }
        }
    </style>
</head>
<body>
    <div class="header">
        <h1>לחמא</h1>
        <p>טופס הזמנת דוגמאות</p>
    </div>

    <div class="container">
        <div class="form-section">
            <h2 class="form-title">פרטי ההזמנה הכלליים</h2>
            <div class="form-grid">
                <div class="form-group">
                    <label for="order-name" class="required">שם המזמין</label>
                    <input type="text" id="order-name" placeholder="הזן שם המזמין">
                </div>

                <div class="form-group">
                    <label for="customer-name" class="required">שם הלקוח</label>
                    <input type="text" id="customer-name" placeholder="הזן שם הלקוח">
                </div>

                <div class="form-group">
                    <label for="delivery-date" class="required">תאריך איסוף מתוכנן</label>
                    <input type="date" id="delivery-date">
                </div>

                <div class="form-group">
                    <label for="hour-request" class="required">שעת איסוף מבוקשת</label>
                    <select id="hour-request">
                        <option value="">בחר שעה</option>
                        <option value="ללא">ללא</option>
                        <option value="08:00">08:00</option>
                        <option value="09:00">09:00</option>
                        <option value="10:00">10:00</option>
                        <option value="11:00">11:00</option>
                        <option value="12:00">12:00</option>
                        <option value="13:00">13:00</option>
                        <option value="14:00">14:00</option>
                        <option value="15:00">15:00</option>
                        <option value="16:00">16:00</option>
                        <option value="17:00">17:00</option>
                    </select>
                </div>
            </div>
        </div>

        <div class="products-section">
            <h2 class="products-title">פרטי המוצרים להזמנה</h2>
            <table class="products-table">
                <thead>
                    <tr>
                        <th class="col-number">מספר</th>
                        <th class="col-product">מק״ט</th>
                        <th class="col-code">מצב מוצר</th>
                        <th class="col-status">כמות</th>
                        <th class="col-notes">הערות</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td class="row-number">1</td>
                        <td>
                            <div class="autocomplete-container">
                                <input type="text" class="autocomplete-input product-code" placeholder="מק״ט המוצר" autocomplete="off">
                                <div class="autocomplete-suggestions"></div>
                            </div>
                        </td>
                        <td>
                            <div class="autocomplete-container">
                                <input type="text" class="autocomplete-input status-input" placeholder="מצב מוצר" autocomplete="off">
                                <div class="autocomplete-suggestions"></div>
                            </div>
                        </td>
                        <td><input type="number" placeholder="כמות" min="1"></td>
                        <td><input type="text" placeholder="הערות"></td>
                    </tr>
                    <tr>
                        <td class="row-number">2</td>
                        <td>
                            <div class="autocomplete-container">
                                <input type="text" class="autocomplete-input product-code" placeholder="מק״ט המוצר" autocomplete="off">
                                <div class="autocomplete-suggestions"></div>
                            </div>
                        </td>
                        <td>
                            <div class="autocomplete-container">
                                <input type="text" class="autocomplete-input status-input" placeholder="מצב מוצר" autocomplete="off">
                                <div class="autocomplete-suggestions"></div>
                            </div>
                        </td>
                        <td><input type="number" placeholder="כמות" min="1"></td>
                        <td><input type="text" placeholder="הערות"></td>
                    </tr>
                    <tr>
                        <td class="row-number">3</td>
                        <td>
                            <div class="autocomplete-container">
                                <input type="text" class="autocomplete-input product-code" placeholder="מק״ט המוצר" autocomplete="off">
                                <div class="autocomplete-suggestions"></div>
                            </div>
                        </td>
                        <td>
                            <div class="autocomplete-container">
                                <input type="text" class="autocomplete-input status-input" placeholder="מצב מוצר" autocomplete="off">
                                <div class="autocomplete-suggestions"></div>
                            </div>
                        </td>
                        <td><input type="number" placeholder="כמות" min="1"></td>
                        <td><input type="text" placeholder="הערות"></td>
                    </tr>
                    <tr>
                        <td class="row-number">4</td>
                        <td>
                            <div class="autocomplete-container">
                                <input type="text" class="autocomplete-input product-code" placeholder="מק״ט המוצר" autocomplete="off">
                                <div class="autocomplete-suggestions"></div>
                            </div>
                        </td>
                        <td>
                            <div class="autocomplete-container">
                                <input type="text" class="autocomplete-input status-input" placeholder="מצב מוצר" autocomplete="off">
                                <div class="autocomplete-suggestions"></div>
                            </div>
                        </td>
                        <td><input type="number" placeholder="כמות" min="1"></td>
                        <td><input type="text" placeholder="הערות"></td>
                    </tr>
                    <tr>
                        <td class="row-number">5</td>
                        <td>
                            <div class="autocomplete-container">
                                <input type="text" class="autocomplete-input product-code" placeholder="מק״ט המוצר" autocomplete="off">
                                <div class="autocomplete-suggestions"></div>
                            </div>
                        </td>
                        <td>
                            <div class="autocomplete-container">
                                <input type="text" class="autocomplete-input status-input" placeholder="מצב מוצר" autocomplete="off">
                                <div class="autocomplete-suggestions"></div>
                            </div>
                        </td>
                        <td><input type="number" placeholder="כמות" min="1"></td>
                        <td><input type="text" placeholder="הערות"></td>
                    </tr>
                    <tr>
                        <td class="row-number">6</td>
                        <td>
                            <div class="autocomplete-container">
                                <input type="text" class="autocomplete-input product-code" placeholder="מק״ט המוצר" autocomplete="off">
                                <div class="autocomplete-suggestions"></div>
                            </div>
                        </td>
                        <td>
                            <div class="autocomplete-container">
                                <input type="text" class="autocomplete-input status-input" placeholder="מצב מוצר" autocomplete="off">
                                <div class="autocomplete-suggestions"></div>
                            </div>
                        </td>
                        <td><input type="number" placeholder="כמות" min="1"></td>
                        <td><input type="text" placeholder="הערות"></td>
                    </tr>
                    <tr>
                        <td class="row-number">7</td>
                        <td>
                            <div class="autocomplete-container">
                                <input type="text" class="autocomplete-input product-code" placeholder="מק״ט המוצר" autocomplete="off">
                                <div class="autocomplete-suggestions"></div>
                            </div>
                        </td>
                        <td>
                            <div class="autocomplete-container">
                                <input type="text" class="autocomplete-input status-input" placeholder="מצב מוצר" autocomplete="off">
                                <div class="autocomplete-suggestions"></div>
                            </div>
                        </td>
                        <td><input type="number" placeholder="כמות" min="1"></td>
                        <td><input type="text" placeholder="הערות"></td>
                    </tr>
                    <tr>
                        <td class="row-number">8</td>
                        <td>
                            <div class="autocomplete-container">
                                <input type="text" class="autocomplete-input product-code" placeholder="מק״ט המוצר" autocomplete="off">
                                <div class="autocomplete-suggestions"></div>
                            </div>
                        </td>
                        <td>
                            <div class="autocomplete-container">
                                <input type="text" class="autocomplete-input status-input" placeholder="מצב מוצר" autocomplete="off">
                                <div class="autocomplete-suggestions"></div>
                            </div>
                        </td>
                        <td><input type="number" placeholder="כמות" min="1"></td>
                        <td><input type="text" placeholder="הערות"></td>
                    </tr>
                    <tr>
                        <td class="row-number">9</td>
                        <td>
                            <div class="autocomplete-container">
                                <input type="text" class="autocomplete-input product-code" placeholder="מק״ט המוצר" autocomplete="off">
                                <div class="autocomplete-suggestions"></div>
                            </div>
                        </td>
                        <td>
                            <div class="autocomplete-container">
                                <input type="text" class="autocomplete-input status-input" placeholder="מצב מוצר" autocomplete="off">
                                <div class="autocomplete-suggestions"></div>
                            </div>
                        </td>
                        <td><input type="number" placeholder="כמות" min="1"></td>
                        <td><input type="text" placeholder="הערות"></td>
                    </tr>
                    <tr>
                        <td class="row-number">10</td>
                        <td>
                            <div class="autocomplete-container">
                                <input type="text" class="autocomplete-input product-code" placeholder="מק״ט המוצר" autocomplete="off">
                                <div class="autocomplete-suggestions"></div>
                            </div>
                        </td>
                        <td>
                            <div class="autocomplete-container">
                                <input type="text" class="autocomplete-input status-input" placeholder="מצב מוצר" autocomplete="off">
                                <div class="autocomplete-suggestions"></div>
                            </div>
                        </td>
                        <td><input type="number" placeholder="כמות" min="1"></td>
                        <td><input type="text" placeholder="הערות"></td>
                    </tr>
                    <tr>
                        <td class="row-number">11</td>
                        <td>
                            <div class="autocomplete-container">
                                <input type="text" class="autocomplete-input product-code" placeholder="מק״ט המוצר" autocomplete="off">
                                <div class="autocomplete-suggestions"></div>
                            </div>
                        </td>
                        <td>
                            <div class="autocomplete-container">
                                <input type="text" class="autocomplete-input status-input" placeholder="מצב מוצר" autocomplete="off">
                                <div class="autocomplete-suggestions"></div>
                            </div>
                        </td>
                        <td><input type="number" placeholder="כמות" min="1"></td>
                        <td><input type="text" placeholder="הערות"></td>
                    </tr>
                    <tr>
                        <td class="row-number">12</td>
                        <td>
                            <div class="autocomplete-container">
                                <input type="text" class="autocomplete-input product-code" placeholder="מק״ט המוצר" autocomplete="off">
                                <div class="autocomplete-suggestions"></div>
                            </div>
                        </td>
                        <td>
                            <div class="autocomplete-container">
                                <input type="text" class="autocomplete-input status-input" placeholder="מצב מוצר" autocomplete="off">
                                <div class="autocomplete-suggestions"></div>
                            </div>
                        </td>
                        <td><input type="number" placeholder="כמות" min="1"></td>
                        <td><input type="text" placeholder="הערות"></td>
                    </tr>
                    <tr>
                        <td class="row-number">13</td>
                        <td>
                            <div class="autocomplete-container">
                                <input type="text" class="autocomplete-input product-code" placeholder="מק״ט המוצר" autocomplete="off">
                                <div class="autocomplete-suggestions"></div>
                            </div>
                        </td>
                        <td>
                            <div class="autocomplete-container">
                                <input type="text" class="autocomplete-input status-input" placeholder="מצב מוצר" autocomplete="off">
                                <div class="autocomplete-suggestions"></div>
                            </div>
                        </td>
                        <td><input type="number" placeholder="כמות" min="1"></td>
                        <td><input type="text" placeholder="הערות"></td>
                    </tr>
                    <tr>
                        <td class="row-number">14</td>
                        <td>
                            <div class="autocomplete-container">
                                <input type="text" class="autocomplete-input product-code" placeholder="מק״ט המוצר" autocomplete="off">
                                <div class="autocomplete-suggestions"></div>
                            </div>
                        </td>
                        <td>
                            <div class="autocomplete-container">
                                <input type="text" class="autocomplete-input status-input" placeholder="מצב מוצר" autocomplete="off">
                                <div class="autocomplete-suggestions"></div>
                            </div>
                        </td>
                        <td><input type="number" placeholder="כמות" min="1"></td>
                        <td><input type="text" placeholder="הערות"></td>
                    </tr>
                    <tr>
                        <td class="row-number">15</td>
                        <td>
                            <div class="autocomplete-container">
                                <input type="text" class="autocomplete-input product-code" placeholder="מק״ט המוצר" autocomplete="off">
                                <div class="autocomplete-suggestions"></div>
                            </div>
                        </td>
                        <td>
                            <div class="autocomplete-container">
                                <input type="text" class="autocomplete-input status-input" placeholder="מצב מוצר" autocomplete="off">
                                <div class="autocomplete-suggestions"></div>
                            </div>
                        </td>
                        <td><input type="number" placeholder="כמות" min="1"></td>
                        <td><input type="text" placeholder="הערות"></td>
                    </tr>
                    <tr>
                        <td class="row-number">16</td>
                        <td>
                            <div class="autocomplete-container">
                                <input type="text" class="autocomplete-input product-code" placeholder="מק״ט המוצר" autocomplete="off">
                                <div class="autocomplete-suggestions"></div>
                            </div>
                        </td>
                        <td>
                            <div class="autocomplete-container">
                                <input type="text" class="autocomplete-input status-input" placeholder="מצב מוצר" autocomplete="off">
                                <div class="autocomplete-suggestions"></div>
                            </div>
                        </td>
                        <td><input type="number" placeholder="כמות" min="1"></td>
                        <td><input type="text" placeholder="הערות"></td>
                    </tr>
                </tbody>
            </table>

            <div class="action-buttons">
                <button class="btn btn-primary" onclick="viewData()">צפה בנתונים</button>
                <button class="btn btn-info" onclick="downloadCSV()">ייצא קובץ</button>
                <button class="btn btn-secondary" onclick="clearForm()">נקה טופס</button>
                <button class="btn btn-success" onclick="shareWhatsApp()">שתף ווטסאפ</button>
                <button class="btn btn-warning" id="add-row-btn" onclick="addNewRow()" style="display: none;">הוסף שורה נוספת</button>
            </div>
        </div>

        <div class="output-section" id="output-section">
            <h3 style="color: #2c7a7b; margin-bottom: 1rem;">פלט מוכן לשליחה:</h3>
            <div class="output-content" id="output-content"></div>
            <div style="margin-top: 1rem; text-align: center;">
                <button class="btn btn-primary" onclick="copyToClipboard()">העתק טקסט</button>
                <button class="btn btn-success" onclick="shareWhatsApp()">שתף בווטסאפ</button>
            </div>
        </div>
    </div>

    <script>
        // רשימת מק"טים עם תיאורים - התיקון השני - הרשימה המלאה
        const productCodes = [
            { code: "531", description: "לחם פרנה סלט" },
            { code: "532", description: "לחם פרנה משפחתית" },
            { code: "535", description: "פוקאצ'ה עגבניות /זית ירוק" },
            { code: "536", description: "פוקאצ'ה שומשום" },
            { code: "537", description: "פוקאצ'ה תערובת גרעינים" },
            { code: "539", description: "לחם פרנה 260" },
            { code: "540", description: "לחם פרנה משפחתית" },
            { code: "541", description: "לחם פרנה סלט" },
            { code: "546", description: "לחם פרנה לכריך קטן" },
            { code: "547", description: "לחם פרנה לכריך" },
            { code: "554", description: "לחם 100% שיפון" },
            { code: "610", description: "פיצה תרד בולגרית" },
            { code: "611", description: "פיצה פטריות וכמהין" },
            { code: "613", description: "פיצה חמאה עגבניות" },
            { code: "614", description: "פיצה בצלים מקורמלים" },
            { code: "615", description: "פיצה זוקיני פורטובלו" },
            { code: "616", description: "פיצה עמק שיפקה" },
            { code: "617", description: "פיצה מרינרה שרי קלמטה" },
            { code: "618", description: "פיצה מרגריטה" },
            { code: "619", description: "פיצה מרגריטה זיתים" },
            { code: "706", description: "משטח מעורב" },
            { code: "723", description: "באגט כריך" },
            { code: "733", description: "לחמניית רוסטיק" },
            { code: "734", description: "לחמניית רוסטיק כפרי" },
            { code: "735", description: "כדור פיצה ג'אג'א" },
            { code: "752", description: "כדור פיצה נאפולי" },
            { code: "756", description: "כדור פיצה אליאברם" },
            { code: "760", description: "בסיס פיצה 20/30" },
            { code: "766", description: "לחם אגוזים וצימוקים קלאסי" },
            { code: "767", description: "לחם אגוזים קלאסי" },
            { code: "769", description: "לחם קלמטה קלאסי" },
            { code: "785", description: "פיציולו בלנקה" },
            { code: "788", description: "באגט סבא ג'בטו" },
            { code: "811", description: "לחם אברהם" },
            { code: "829", description: "לחמנית מחורצת מיקס שומשום" },
            { code: "831", description: "לחמנית סליידר עם שומשום" },
            { code: "833", description: "לחמנית המבורגר מחורצת 80" },
            { code: "834", description: "כפרי עגול אישי" },
            { code: "839", description: "חצי באגט איטלקי" },
            { code: "840", description: "פיסל קצר לכריך" },
            { code: "841", description: "לחמנית סלים פרוס" },
            { code: "842", description: "לחמנית המבורגרדלי פרוסה" },
            { code: "844", description: "לחמניה פרוסה להמבורגר" },
            { code: "847", description: "לחמנית באגט" },
            { code: "861", description: "קסטן טוסט פרוס 20 פ" },
            { code: "869", description: "לחמנית פולאפרט לבן" },
            { code: "871", description: "כריך לבן" },
            { code: "875", description: "מיני דגנים" },
            { code: "877", description: "לחמנית המבורגר סליידר" },
            { code: "881", description: "לחם כוסמין מלא" },
            { code: "883", description: "לחם שלושת הקמחים עם דגנים" },
            { code: "885", description: "לחם קסטן 13*13" },
            { code: "887", description: "לחם קסטן כוסמין" },
            { code: "890", description: "לחמון" },
            { code: "894", description: "כריך כפרי" },
            { code: "897", description: "המבורגר פרוס חלק" },
            { code: "908", description: "לחם שיפון" },
            { code: "911", description: "לחם קל" },
            { code: "913", description: "דגנים לכריכים" },
            { code: "915", description: "פוקצ'ה 40/60" },
            { code: "916", description: "פלטה ג'ירסולא" },
            { code: "918", description: "דגנים גדול" },
            { code: "924", description: "לחמנית ביאנקה" },
            { code: "925", description: "לח' כפרית בציפוי דגנים" },
            { code: "927", description: "פיסל דגנים" },
            { code: "932", description: "לחם אישי לבן" },
            { code: "933", description: "לחם אישי דגנים" },
            { code: "935", description: "סטירטו שומשום" },
            { code: "940", description: "באגט איטלקי" },
            { code: "945", description: "רוסטיק" },
            { code: "946", description: "כריך ביאנקה" },
            { code: "947", description: "כריך דגנים" },
            { code: "948", description: "צ'בטה כריך" },
            { code: "950", description: "צ'בטה לבן" },
            { code: "952", description: "ביס צרפתית" },
            { code: "953", description: "ביס דגנים" },
            { code: "961", description: "לבן 30 15\\15 פרוס" },
            { code: "971", description: "מיני חלה" },
            { code: "977", description: "פלוט דגנים" },
            { code: "979", description: "לחמנית שומשום" },
            { code: "980", description: "סלופי המבורגר לבן" },
            { code: "983", description: "חלה תבנית" },
            { code: "984", description: "המבורגר בריבוע" },
            { code: "986", description: "כדור פוקצ'ה 280 גרם" },
            { code: "992", description: "בצק לפיצה 992" },
            { code: "994", description: "כדור פיצה" },
            { code: "1003", description: "פילאס פטריות" },
            { code: "1004", description: "פילאס מנגולד /תרד" },
            { code: "1005", description: "פילאס פיצה" },
            { code: "1006", description: "פילאס בטעם קשקבל" },
            { code: "2001", description: "אצבעות בטעם קשקבל" },
            { code: "3001", description: "בורקס גבינה קטן" },
            { code: "3002", description: "בורקס תפו\"א קטן" },
            { code: "3006", description: "בורקס תפו\"א קטן ק" },
            { code: "3011", description: "בורקס גבינה גדול" },
            { code: "3012", description: "בורקס תפו\"א גדול" },
            { code: "3021", description: "ג'חנון חתוך" },
            { code: "3023", description: "בצק שמרים 8.5 ק\"ג" },
            { code: "3026", description: "קוביית בצק" },
            { code: "3037", description: "מקל זיוה גבינה" },
            { code: "3038", description: "מקל זיווה גבינה + זיתים" },
            { code: "3040", description: "זיוה גבינה" },
            { code: "3051", description: "פאן וניל" },
            { code: "3053", description: "פאן תפו\"ע" },
            { code: "4001", description: "בורקיטס גבינה" },
            { code: "4003", description: "בורקיטס גבינה ק" },
            { code: "4009", description: "מיני בורקיטס" },
            { code: "4011", description: "אזני המן שוקולד" },
            { code: "4012", description: "אזני המן תמרים" },
            { code: "4013", description: "אזני המן פרג" },
            { code: "4014", description: "אזני המן אגוזים" },
            { code: "5009", description: "בואיקוס תרד+גבינה" },
            { code: "5010", description: "בואיקוס בטעם קשקבל" },
            { code: "5011", description: "בואיקוס לה פטה חצילים" },
            { code: "5012", description: "בויוס בטעם קשקבל" },
            { code: "5015", description: "בואיקוס בטטה ועשבי תיבול" },
            { code: "5500", description: "מיני חמאה" },
            { code: "5511", description: "פרסבורגר פרג חלבי" },
            { code: "5512", description: "קרנץ במילוי בטעם שוקולד חלבי" },
            { code: "5516", description: "קרנץ קינמון אגוזים חלבי" },
            { code: "5519", description: "פרסבורגר ריקוטה חלבי" },
            { code: "6001", description: "נחש גבינה" },
            { code: "6002", description: "נחש תפו\"א" },
            { code: "6003", description: "נחש פטריות" },
            { code: "6004", description: "נחש תרד+גבינה בד\"צ" },
            { code: "6008", description: "נחש פיצה" },
            { code: "6010", description: "נחש גבינה פ" },
            { code: "6011", description: "נחש תרד גבינה פ" },
            { code: "8446", description: "פיתה שומשום" },
            { code: "8811", description: "פרסבורגר תפו\"ע קנמון" },
            { code: "8812", description: "פרסבורגר גבינה מתוקה" },
            { code: "8813", description: "פרסבורגר ג.מתוקה אוכמניות" },
            { code: "8814", description: "קראנץ שוקולד פרווה" },
            { code: "8819", description: "פרסבורגר פרג פרווה" },
            { code: "8961", description: "קרנץ שוקולד" },
            { code: "8964", description: "קרנץ גבינה" },
            { code: "9001", description: "שפמנון שוקולד" },
            { code: "9002", description: "רוגלך" },
            { code: "9003", description: "גביניות" },
            { code: "9004", description: "תפוחית" },
            { code: "9005", description: "כיס אוכמניות" },
            { code: "9006", description: "קינמון" },
            { code: "9007", description: "קוראסון ביס" },
            { code: "9008", description: "כיס פרג" },
            { code: "9010", description: "דניש וניל" },
            { code: "9018", description: "קוראסון שוקולד קטן" },
            { code: "9019", description: "קוראסון שקדים" },
            { code: "9021", description: "קוראסון אגוזים קטן" },
            { code: "9023", description: "קוראסון חלבה" },
            { code: "9029", description: "ק.שוקולד+חלבה" },
            { code: "9040", description: "רוגעלך ירושלמי במילוי טעם שוק" },
            { code: "9043", description: "סירופ מתוק 5 ליטר" },
            { code: "9051", description: "קוראסון חמאה אישי" },
            { code: "9052", description: "קוראסון חמאה שוקו אישי" },
            { code: "9805", description: "לחם מחמצת עגבניות" },
            { code: "9810", description: "לחם אגוזים צימוקים כ" },
            { code: "9901", description: "לחם מחמצת כפרי" },
            { code: "9902", description: "לחם מחמצת זיתים" },
            { code: "9903", description: "לחם מחמצת עם קמח מלא" },
            { code: "9904", description: "לחם מחמצת עם דגנים" },
            { code: "9905", description: "לחם מחמצת צרפתי" },
            { code: "9907", description: "לחם מחמצת קלמטה" },
            { code: "9909", description: "לחם מחמצת אגוזים" },
            { code: "9912", description: "לחם מחמצת כוסמין" },
            { code: "9913", description: "לחם עם כוסמין ובצל" }
        ];

        // אפשרויות autocomplete למצב מוצר - התיקון הראשון
        const statusOptions = ['אפוי', 'קפוא'];

        // יצירת autocomplete לכל שדה מצב מוצר
        document.addEventListener('DOMContentLoaded', function() {
            const today = new Date().toISOString().split('T')[0];
            document.getElementById('delivery-date').value = today;

            // הוספת autocomplete לכל שדה מק"ט מוצר
            const productCodeInputs = document.querySelectorAll('.product-code');
            productCodeInputs.forEach(input => {
                setupProductCodeAutocomplete(input);
            });

            // הוספת autocomplete לכל שדה מצב מוצר - תיקון הראשון
            const statusInputs = document.querySelectorAll('.status-input');
            statusInputs.forEach(input => {
                setupStatusAutocomplete(input);
            });

            // הוספת מאזיני אירועים לבדיקת שורות מלאות
            addRowCheckListeners();
        });

        function addRowCheckListeners() {
            const tableInputs = document.querySelectorAll('.products-table input, .autocomplete-input');
            tableInputs.forEach(input => {
                input.addEventListener('input', checkIfNeedAddRowButton);
            });
        }

        function checkIfNeedAddRowButton() {
            const rows = document.querySelectorAll('.products-table tbody tr');
            let filledRows = 0;
            
            rows.forEach(row => {
                const codeInput = row.querySelector('.product-code');
                const statusInput = row.querySelector('.status-input');
                const quantityInput = row.querySelector('input[placeholder="כמות"]');
                const notesInput = row.querySelector('input[placeholder="הערות"]');
                
                const code = codeInput ? codeInput.value.trim() : '';
                const status = statusInput ? statusInput.value.trim() : '';
                const quantity = quantityInput ? quantityInput.value.trim() : '';
                const notes = notesInput ? notesInput.value.trim() : '';

                if (code || status || quantity || notes) {
                    filledRows++;
                }
            });

            const addRowBtn = document.getElementById('add-row-btn');
            if (filledRows >= rows.length) {
                addRowBtn.style.display = 'inline-flex';
            } else {
                addRowBtn.style.display = 'none';
            }
        }

        // תיקון שני - autocomplete למק"טים
        function setupProductCodeAutocomplete(input) {
            const container = input.parentElement;
            const suggestionsDiv = container.querySelector('.autocomplete-suggestions');
            let selectedIndex = -1;

            input.addEventListener('input', function() {
                const value = this.value.trim().toLowerCase();
                selectedIndex = -1;
                
                if (value === '') {
                    hideSuggestions();
                    return;
                }

                const matches = productCodes.filter(product => 
                    product.code.toLowerCase().includes(value) || 
                    product.description.toLowerCase().includes(value)
                );

                if (matches.length > 0) {
                    showSuggestions(matches);
                } else {
                    hideSuggestions();
                }
            });

            input.addEventListener('keydown', function(e) {
                const suggestions = suggestionsDiv.querySelectorAll('.autocomplete-suggestion');
                
                if (e.key === 'ArrowDown') {
                    e.preventDefault();
                    selectedIndex = Math.min(selectedIndex + 1, suggestions.length - 1);
                    updateSelection();
                } else if (e.key === 'ArrowUp') {
                    e.preventDefault();
                    selectedIndex = Math.max(selectedIndex - 1, -1);
                    updateSelection();
                } else if (e.key === 'Enter') {
                    e.preventDefault();
                    if (selectedIndex >= 0 && suggestions[selectedIndex]) {
                        const selectedCode = suggestions[selectedIndex].getAttribute('data-code');
                        selectSuggestion(selectedCode);
                    }
                } else if (e.key === 'Escape') {
                    hideSuggestions();
                }
            });

            input.addEventListener('blur', function() {
                setTimeout(() => hideSuggestions(), 150);
            });

            function showSuggestions(matches) {
                suggestionsDiv.innerHTML = '';
                matches.forEach(product => {
                    const div = document.createElement('div');
                    div.className = 'autocomplete-suggestion';
                    div.innerHTML = `<strong>${product.code}</strong> - ${product.description}`;
                    div.setAttribute('data-code', product.code);
                    div.addEventListener('click', () => selectSuggestion(product.code));
                    suggestionsDiv.appendChild(div);
                });
                suggestionsDiv.style.display = 'block';
            }

            function hideSuggestions() {
                suggestionsDiv.style.display = 'none';
                selectedIndex = -1;
            }

            function updateSelection() {
                const suggestions = suggestionsDiv.querySelectorAll('.autocomplete-suggestion');
                suggestions.forEach((suggestion, index) => {
                    suggestion.classList.toggle('selected', index === selectedIndex);
                });
            }

            function selectSuggestion(code) {
                input.value = code;
                hideSuggestions();
                checkIfNeedAddRowButton();
            }
        }

        // תיקון ראשון - תיקון autocomplete למצב מוצר
        function setupStatusAutocomplete(input) {
            const container = input.parentElement;
            const suggestionsDiv = container.querySelector('.autocomplete-suggestions');
            let selectedIndex = -1;

            input.addEventListener('input', function() {
                const value = this.value.trim().toLowerCase();
                selectedIndex = -1;
                
                if (value === '') {
                    hideSuggestions();
                    return;
                }

                const matches = statusOptions.filter(option => 
                    option.toLowerCase().includes(value) || option.toLowerCase().startsWith(value)
                );

                if (matches.length > 0) {
                    showSuggestions(matches);
                } else {
                    hideSuggestions();
                }
            });

            input.addEventListener('keydown', function(e) {
                const suggestions = suggestionsDiv.querySelectorAll('.autocomplete-suggestion');
                
                if (e.key === 'ArrowDown') {
                    e.preventDefault();
                    selectedIndex = Math.min(selectedIndex + 1, suggestions.length - 1);
                    updateSelection();
                } else if (e.key === 'ArrowUp') {
                    e.preventDefault();
                    selectedIndex = Math.max(selectedIndex - 1, -1);
                    updateSelection();
                } else if (e.key === 'Enter') {
                    e.preventDefault();
                    if (selectedIndex >= 0 && suggestions[selectedIndex]) {
                        selectSuggestion(suggestions[selectedIndex].textContent);
                    }
                } else if (e.key === 'Escape') {
                    hideSuggestions();
                }
            });

            input.addEventListener('blur', function() {
                setTimeout(() => hideSuggestions(), 150);
            });

            function showSuggestions(matches) {
                suggestionsDiv.innerHTML = '';
                matches.forEach(match => {
                    const div = document.createElement('div');
                    div.className = 'autocomplete-suggestion';
                    div.textContent = match;
                    div.addEventListener('click', () => selectSuggestion(match));
                    suggestionsDiv.appendChild(div);
                });
                suggestionsDiv.style.display = 'block';
            }

            function hideSuggestions() {
                suggestionsDiv.style.display = 'none';
                selectedIndex = -1;
            }

            function updateSelection() {
                const suggestions = suggestionsDiv.querySelectorAll('.autocomplete-suggestion');
                suggestions.forEach((suggestion, index) => {
                    suggestion.classList.toggle('selected', index === selectedIndex);
                });
            }

            function selectSuggestion(value) {
                input.value = value;
                hideSuggestions();
                checkIfNeedAddRowButton();
            }
        }

        function setupAutocomplete(input) {
            const container = input.parentElement;
            const suggestionsDiv = container.querySelector('.autocomplete-suggestions');
            let selectedIndex = -1;

            input.addEventListener('input', function() {
                const value = this.value.trim();
                selectedIndex = -1;
                
                if (value === '') {
                    hideSuggestions();
                    return;
                }

                const matches = statusOptions.filter(option => 
                    option.includes(value) || option.startsWith(value.charAt(0))
                );

                if (matches.length > 0) {
                    showSuggestions(matches);
                } else {
                    hideSuggestions();
                }
            });

            input.addEventListener('keydown', function(e) {
                const suggestions = suggestionsDiv.querySelectorAll('.autocomplete-suggestion');
                
                if (e.key === 'ArrowDown') {
                    e.preventDefault();
                    selectedIndex = Math.min(selectedIndex + 1, suggestions.length - 1);
                    updateSelection();
                } else if (e.key === 'ArrowUp') {
                    e.preventDefault();
                    selectedIndex = Math.max(selectedIndex - 1, -1);
                    updateSelection();
                } else if (e.key === 'Enter') {
                    e.preventDefault();
                    if (selectedIndex >= 0 && suggestions[selectedIndex]) {
                        selectSuggestion(suggestions[selectedIndex].textContent);
                    } else if (suggestionsDiv.style.display === 'block') {
                        const firstSuggestion = suggestions[0];
                        if (firstSuggestion) {
                            selectSuggestion(firstSuggestion.textContent);
                        }
                    }
                } else if (e.key === 'Escape') {
                    hideSuggestions();
                }
            });

            input.addEventListener('blur', function() {
                setTimeout(() => hideSuggestions(), 150);
            });

            function showSuggestions(matches) {
                suggestionsDiv.innerHTML = '';
                matches.forEach(match => {
                    const div = document.createElement('div');
                    div.className = 'autocomplete-suggestion';
                    div.textContent = match;
                    div.addEventListener('click', () => selectSuggestion(match));
                    suggestionsDiv.appendChild(div);
                });
                suggestionsDiv.style.display = 'block';
            }

            function hideSuggestions() {
                suggestionsDiv.style.display = 'none';
                selectedIndex = -1;
            }

            function updateSelection() {
                const suggestions = suggestionsDiv.querySelectorAll('.autocomplete-suggestion');
                suggestions.forEach((suggestion, index) => {
                    suggestion.classList.toggle('selected', index === selectedIndex);
                });
            }

            function selectSuggestion(value) {
                input.value = value;
                hideSuggestions();
                input.focus();
            }
        }

        function addNewRow() {
            const tableBody = document.querySelector('.products-table tbody');
            const currentRows = tableBody.querySelectorAll('tr').length;
            const newRowNumber = currentRows + 1;
            
            const newRow = document.createElement('tr');
            newRow.innerHTML = `
                <td class="row-number">${newRowNumber}</td>
                <td>
                    <div class="autocomplete-container">
                        <input type="text" class="autocomplete-input product-code" placeholder="מק״ט המוצר" autocomplete="off">
                        <div class="autocomplete-suggestions"></div>
                    </div>
                </td>
                <td>
                    <div class="autocomplete-container">
                        <input type="text" class="autocomplete-input status-input" placeholder="מצב מוצר" autocomplete="off">
                        <div class="autocomplete-suggestions"></div>
                    </div>
                </td>
                <td><input type="number" placeholder="כמות" min="1"></td>
                <td><input type="text" placeholder="הערות"></td>
            `;
            
            tableBody.appendChild(newRow);
            
            // הוספת autocomplete לשדות החדשים
            const newProductCodeInput = newRow.querySelector('.product-code');
            const newStatusInput = newRow.querySelector('.status-input');
            setupProductCodeAutocomplete(newProductCodeInput);
            setupStatusAutocomplete(newStatusInput);
            
            // הוספת מאזיני אירועים לשדות החדשים
            const newInputs = newRow.querySelectorAll('input');
            newInputs.forEach(input => {
                input.addEventListener('input', checkIfNeedAddRowButton);
            });
            
            // הסתרת כפתור הוסף שורה
            document.getElementById('add-row-btn').style.display = 'none';
            
            // גלילה לשורה החדשה
            newRow.scrollIntoView({ behavior: 'smooth', block: 'center' });
            
            // פוקוס על השדה הראשון בשורה החדשה
            newRow.querySelector('.product-code').focus();
        }

        function viewData() {
            generateOutput();
        }

        function clearForm() {
            document.getElementById('order-name').value = '';
            document.getElementById('customer-name').value = '';
            document.getElementById('delivery-date').value = '';
            document.getElementById('hour-request').value = '';
            
            const inputs = document.querySelectorAll('.products-table input');
            inputs.forEach(input => input.value = '');
            
            const autocompleteInputs = document.querySelectorAll('.autocomplete-input');
            autocompleteInputs.forEach(input => input.value = '');
            
            // הסרת שורות נוספות (השארת רק 16 הראשונות)
            const tableBody = document.querySelector('.products-table tbody');
            const allRows = tableBody.querySelectorAll('tr');
            for (let i = 16; i < allRows.length; i++) {
                allRows[i].remove();
            }
            
            // הסתרת כפתור הוסף שורה
            document.getElementById('add-row-btn').style.display = 'none';
            
            document.getElementById('output-section').classList.remove('show');
        }

        function generateOutput() {
            const orderName = document.getElementById('order-name').value;
            const customerName = document.getElementById('customer-name').value;
            const deliveryDate = document.getElementById('delivery-date').value;
            const hourRequest = document.getElementById('hour-request').value;

            let headerHtml = `
                <div style="font-size: 18px; font-weight: bold; margin-bottom: 20px;">הזמנת דוגמאות</div>
                <div style="margin-bottom: 15px;">
                    <div><strong>שם המזמין:</strong> ${orderName}</div>
                    <div><strong>שם הלקוח:</strong> ${customerName}</div>
                    <div><strong>תאריך איסוף מתוכנן:</strong> ${deliveryDate}</div>
                    <div><strong>שעת איסוף מבוקשת:</strong> ${hourRequest}</div>
                </div>
                <div style="font-weight: bold; margin-bottom: 10px;">פרטי המוצרים:</div>
            `;

            const rows = document.querySelectorAll('.products-table tbody tr');
            let hasProducts = false;
            let tableRows = '';
            const hebrewLetters = ['א', 'ב', 'ג', 'ד', 'ה', 'ו', 'ז', 'ח', 'ט', 'י', 'כ', 'ל', 'מ', 'נ', 'ס', 'ע'];

            rows.forEach((row, index) => {
                const codeInput = row.querySelector('.product-code');
                const statusInput = row.querySelector('.status-input');
                const quantityInput = row.querySelector('input[placeholder="כמות"]');
                const notesInput = row.querySelector('input[placeholder="הערות"]');
                
                const code = codeInput ? codeInput.value.trim() : '';
                const status = statusInput ? statusInput.value.trim() : '';
                const quantity = quantityInput ? quantityInput.value.trim() : '';
                const notes = notesInput ? notesInput.value.trim() : '';

                if (code || status || quantity || notes) {
                    hasProducts = true;
                    const hebrewLetter = hebrewLetters[index] || (index + 1).toString();
                    tableRows += `
                        <tr>
                            <td class="col-num">${hebrewLetter}</td>
                            <td class="col-code">${code || ''}</td>
                            <td class="col-status">${status || ''}</td>
                            <td class="col-qty">${quantity || ''}</td>
                            <td class="col-notes">${notes || ''}</td>
                        </tr>
                    `;
                }
            });

            let tableHtml = '';
            if (hasProducts) {
                tableHtml = `
                    <table class="output-table">
                        <thead>
                            <tr>
                                <th class="col-num">מספר</th>
                                <th class="col-code">מק״ט</th>
                                <th class="col-status">מצב מוצר</th>
                                <th class="col-qty">כמות</th>
                                <th class="col-notes">הערות</th>
                            </tr>
                        </thead>
                        <tbody>
                            ${tableRows}
                        </tbody>
                    </table>
                `;
            } else {
                tableHtml = '<div>אין מוצרים</div>';
            }

            document.getElementById('output-content').innerHTML = headerHtml + tableHtml;
            document.getElementById('output-section').classList.add('show');
        }

        function copyToClipboard() {
            const orderName = document.getElementById('order-name').value;
            const customerName = document.getElementById('customer-name').value;
            const deliveryDate = document.getElementById('delivery-date').value;
            const hourRequest = document.getElementById('hour-request').value;

            let copyText = `הזמנת דומגאות\n\n`;
            copyText += `שם המזמין: ${orderName}\n`;
            copyText += `שם הלקוח: ${customerName}\n`;
            copyText += `תאריך איסוף מתוכנן: ${deliveryDate}\n`;
            copyText += `שעת איסוף מבוקשת: ${hourRequest}\n\n`;
            copyText += `פרטי המוצרים:\n`;
            copyText += `מספר | מק״ט | מצב מוצר | כמות | הערות\n`;
            copyText += `-----|------|---------|-------|-------\n`;

            const rows = document.querySelectorAll('.products-table tbody tr');
            let hasProducts = false;
            const hebrewLetters = ['א', 'ב', 'ג', 'ד', 'ה', 'ו', 'ז', 'ח', 'ט', 'י', 'כ', 'ל', 'מ', 'נ', 'ס', 'ע'];

            rows.forEach((row, index) => {
                const codeInput = row.querySelector('.product-code');
                const statusInput = row.querySelector('.status-input');
                const quantityInput = row.querySelector('input[placeholder="כמות"]');
                const notesInput = row.querySelector('input[placeholder="הערות"]');
                
                const code = codeInput ? codeInput.value.trim() : '';
                const status = statusInput ? statusInput.value.trim() : '';
                const quantity = quantityInput ? quantityInput.value.trim() : '';
                const notes = notesInput ? notesInput.value.trim() : '';

                if (code || status || quantity || notes) {
                    hasProducts = true;
                    const hebrewLetter = hebrewLetters[index] || (index + 1).toString();
                    copyText += `${hebrewLetter} | ${code || ''} | ${status || ''} | ${quantity || ''} | ${notes || ''}\n`;
                }
            });

            if (!hasProducts) {
                copyText += `אין מוצרים\n`;
            }

            navigator.clipboard.writeText(copyText).then(() => {
                alert('הטקסט הועתק ללוח!');
            });
        }

        function shareWhatsApp() {
            const orderName = document.getElementById('order-name').value;
            const customerName = document.getElementById('customer-name').value;
            const deliveryDate = document.getElementById('delivery-date').value;
            const hourRequest = document.getElementById('hour-request').value;

            let shareText = `הזמנת דוגמאות\n\n`;
            shareText += `שם המזמין: ${orderName}\n`;
            shareText += `שם הלקוח: ${customerName}\n`;
            shareText += `תאריך איסוף מתוכנן: ${deliveryDate}\n`;
            shareText += `שעת איסוף מבוקשת: ${hourRequest}\n\n`;
            shareText += `פרטי המוצרים:\n`;

            const rows = document.querySelectorAll('.products-table tbody tr');
            let hasProducts = false;
            let productCount = 0;
            const hebrewLetters = ['א', 'ב', 'ג', 'ד', 'ה', 'ו', 'ז', 'ח', 'ט', 'י', 'כ', 'ל', 'מ', 'נ', 'ס', 'ע'];

            rows.forEach((row, index) => {
                const codeInput = row.querySelector('.product-code');
                const statusInput = row.querySelector('.status-input');
                const quantityInput = row.querySelector('input[placeholder="כמות"]');
                const notesInput = row.querySelector('input[placeholder="הערות"]');
                
                const code = codeInput ? codeInput.value.trim() : '';
                const status = statusInput ? statusInput.value.trim() : '';
                const quantity = quantityInput ? quantityInput.value.trim() : '';
                const notes = notesInput ? notesInput.value.trim() : '';

                if (code || status || quantity || notes) {
                    hasProducts = true;
                    const hebrewLetter = hebrewLetters[productCount] || (productCount + 1).toString();
                    productCount++;
                    shareText += `${hebrewLetter}. מק״ט: ${code || 'לא צוין'}, מצב: ${status || 'לא צוין'}, כמות: ${quantity || 'לא צוין'}`;
                    if (notes) {
                        shareText += `, הערות: ${notes}`;
                    }
                    shareText += `\n`;
                }
            });

            if (!hasProducts) {
                shareText += `אין מוצרים`;
            }

            const encodedText = encodeURIComponent(shareText);
            window.open(`https://wa.me/?text=${encodedText}`, '_blank');
        }

        function downloadCSV() {
            alert('מייצא קובץ מסודר לאקסל... 📊');
            
            const orderName = document.getElementById('order-name').value;
            const customerName = document.getElementById('customer-name').value;
            const deliveryDate = document.getElementById('delivery-date').value;
            const hourRequest = document.getElementById('hour-request').value;
            
            let csvContent = '';
            csvContent += '"הזמנת דוגמאות",,,,\n';
            csvContent += ',,,,\n';
            csvContent += `"שם המזמין","${orderName}",,,\n`;
            csvContent += `"שם הלקוח","${customerName}",,,\n`;
            csvContent += `"תאריך איסוף מתוכנן","${deliveryDate}",,,\n`;
            csvContent += `"שעת איסוף מבוקשת","${hourRequest}",,,\n`;
            csvContent += ',,,,\n';
            csvContent += '"פרטי המוצרים:",,,,\n';
            csvContent += ',,,,\n';
            csvContent += '"מספר","מק״ט","מצב מוצר","כמות","הערות"\n';
            
            const hebrewLetters = ['א', 'ב', 'ג', 'ד', 'ה', 'ו', 'ז', 'ח', 'ט', 'י', 'כ', 'ל', 'מ', 'נ', 'ס', 'ע'];
            const rows = document.querySelectorAll('.products-table tbody tr');
            let hasProducts = false;
            if (!hasProducts) {
                csvContent += '"","","אין מוצרים","",""\n';
            }

            // יצירת והורדת הקובץ
            const blob = new Blob(['\uFEFF' + csvContent], { type: 'text/csv;charset=utf-8;' });
            const link = document.createElement('a');
            link.href = URL.createObjectURL(blob);
            link.download = `הזמנת_דוגמאות_${new Date().toISOString().split('T')[0]}.csv`;
            link.click();
            
            setTimeout(() => {
                alert('הקובץ הורד בפורמט מסודר ונקי! 🎉');
            }, 1000);
        }

        function exportData() {
            generateOutput();
            
            const shareOptions = `
                <div style="background: white; padding: 20px; border-radius: 12px; box-shadow: 0 4px 12px rgba(0,0,0,0.15); margin-top: 15px;">
                    <h4 style="color: #2c7a7b; margin-bottom: 15px; text-align: center;">בחר אפשרות שיתוף:</h4>
                    <div style="display: flex; flex-wrap: wrap; gap: 10px; justify-content: center;">
                        <button onclick="downloadCSV()" class="btn btn-info" style="margin: 5px;">📊 הורד קובץ Excel</button>
                        <button onclick="shareEmail()" class="btn btn-warning" style="margin: 5px;">📧 שלח במייל</button>
                        <button onclick="shareWhatsApp()" class="btn btn-success" style="margin: 5px;">📱 שתף בווטסאפ</button>
                        <button onclick="copyFullOutput()" class="btn btn-primary" style="margin: 5px;">📋 העתק טקסט מלא</button>
                        <button onclick="hideShareOptions()" class="btn btn-secondary" style="margin: 5px;">❌ סגור</button>
                    </div>
                </div>
            `;
            
            document.getElementById('output-content').innerHTML += shareOptions;
        }

        function hideShareOptions() {
            generateOutput();
        }

        function shareEmail() {
            const outputContent = document.getElementById('output-content').innerHTML;
            const textContent = document.getElementById('output-content').innerText;
            
            const subject = encodeURIComponent('הזמנת דוגמאות');
            const body = encodeURIComponent(textContent);
            
            window.open(`mailto:?subject=${subject}&body=${body}`, '_blank');
        }

        function copyFullOutput() {
            const outputElement = document.getElementById('output-content');
            const textContent = outputElement.innerText;
            
            navigator.clipboard.writeText(textContent).then(() => {
                alert('הטקסט המלא הועתק ללוח! 📋');
            });
        }
    </script>
</body>
</html>
